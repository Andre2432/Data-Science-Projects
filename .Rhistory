require(ggplot2)
data <- iris
summary(data)
plot(data)
hist(data$Sepal.Length)
boxplot(formula = Sepal.Length ~ Species, data = data)
myRegression <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width, data=data)
summary(myRegression)
#load data
data <- read_tsv("teaching_evals_description", head=TRUE)
#load data
data <- read_tsv("teaching_evals_description.txt", head=TRUE)
#load data
data <- read_tsv("teaching_evals_description.txt")
#1. explain
#examine the data
summary(data)
data <- read.delim("teaching_evals.txt", header = TRUE )
data <- read.delim2("teaching_evals.txt", header = TRUE )
reexamine the data with correct variable types
#
data2 <- read.delim2("teaching_evals.txt", header = TRUE )
my_data <- read.delim2("teaching_evals.txt", header = TRUE )
#1. explain
#examine the data
summary(data)
#transform variables
data$columnName <- as.factor(data$columnName) #YOU NEED TO CHANGE THIS
#load data
#data <- read.delim("teaching_evals_description.txt", header = TRUE )
data <- read.delim("teaching_evals.txt", header = FALSE )
#setup our environment
setwd("C:\Users\Andre\Desktop\Itec 375\Final attached files Nov 8, 2020 215 PM")
#load data
data <- read.delim("teaching_evals_description.txt", header = TRUE )
#load data
data <- read.table("teaching_evals.txt", sep="\t")
#setup our environment
setwd("C:\Users\Andre\Desktop\Itec 375\Final attached files Nov 8, 2020 215 PM/")
#setup our environment
setwd("C:\\Users\Andre\Desktop\Itec 375\Final attached files Nov 8, 2020 215 PM/")
#setup our environment
setwd("C:\\Users\\Andre\\Desktop\\Itec 375\\Final attached files Nov 8, 2020 215 PM/")
data <- read.delim("teaching_evals.txt", header = TRUE )
data <- read.delim2("teaching_evals.txt", header = TRUE )
#reexamine the data with correct variable types
summary(data)
#examine the data
summary(data)
View(data)
data <- read.delim2("teaching_evals.txt", header = TRUE )
summary(data)
data2 <- read.delim2("teaching_evals.txt", header = TRUE )
#load data
data2 <- read.delim("teaching_evals_description.txt", header = TRUE )
#load data
data <- read.delim("teaching_evals_description.txt", header = TRUE )
#reexamine the data with correct variable types
summary(data2)
library(data.table)
library(readr)
#library(readr)
library(data.table)
install.packages("data.table")
install.packages("data.table")
#load data
data <- data.table("teaching_evals_description.txt", header = TRUE )
#load data
data <- fread("teaching_evals_description.txt", header = TRUE )
library(readr)
#load data
data <- read.delim2("teaching_evals_description.txt" )
data <- read.delim2("teaching_evals.txt" )
View(myRegression)
str(data)
View(data)
View(data)
View(data2)
View(data2)
#load data
data2 <- read.delim2("teaching_evals_description.txt" )
str(data)
head(data)
head(data2)
str(data2)
#transform variables
summary(data)
#load data
data <- read.delim2("teaching_evals_description.txt" )
summary(data)
summary(data2)
summary(data2)
#load data
data <- read.delim("teaching_evals_description.txt" )
data2 <- read.delim2("teaching_evals.txt" )
summary(data)
summary(data2)
#transform variables
d_out <- d %>%
mutate_if(is.character, as.factor)
d_out
data_out
#transform variables
data <- d %>%
mutate_if(is.character, as.factor)
setwd(mypath)
#setup our environment
mypath = "C:\\Users\\Andre\\Desktop\\Itec 375\\Final attached files Nov 8, 2020 215 PM/"
#load data
txt_files_ls = list.files(path=mypath, pattern="*.txt")
summary(data)
summary(data2)
summary(data + data2)
summary(data)
txt_files_df <- lapply(txt_files_ls, function(x) {read.table(file = x, header = T, sep =",")})
txt_files_df <- lapply(txt_files_ls, function(x) {read.table(file = x, header = T, sep =",")})
listfile_teaching <- listfile[grep("teaching",listfile)]
listfile_teaching <- listfile[grep("teaching",listfile)]
listfile_teaching <- listfile[grep("*.txt",listfile)]
#load data
txt_files_ls = list.files(path=mypath, pattern="*.txt")
head(data)
head(data2)
summary(data)
summary(data2)
#transfrom columns
head(mypath)
summary(mypath)
summary(data2)
#load data
txt_files_ls = list.files(path=mypath, pattern="*.txt")
write_tsv(data, path = "teaching_evals.txt")
write_tsv(data, path = "teaching_evals_description.txt")
View(myRegression)
View(data)
View(data2)
View(data2)
data("data")
write_tsv(data, path = "teaching_evals_description.txt")
write_tsv(data, path = "teaching_evals.txt")
#transfrom columns
head(data)
str(data)
summary(data)
summary(data2)
#load data
txt_files_ls = list.files(path=mypath, pattern="*.txt")
#load data
data <- read.delim2(mypath)
#load data
data <- read.delim2("teaching_evals_description.txt", header = T)
data <- read.delim2("teaching_evals.txt", header = T)
data2 <- read.delim2("teaching_evals.txt", header = T)
#load data
data <- read.delim2("teaching_evals_description.txt", header = T)
#load data
data <- read.delim("teaching_evals_description.txt", header = T)
data2 <- read.delim2("teaching_evals.txt", header = T)
View(data)
#load data
txt_files_ls = list.files(path=mypath, pattern="*.txt")
View(data)
View(data2)
#load data
txt_files_ls = list.files(path=mypath, pattern="*.txt")
write_tsv(data, path = "teaching_evals.txt")
write_tsv(data, path = "teaching_evals_description.txt")
summary(data)
summary(data2)
data <- read.delim("teaching_evals_description", header = TRUE)
data <- read.delim("teaching_evals_description", header = TRUE)
data <- read.delim("teaching_evals_description.txt", header = TRUE)
data2 <- read.delim("teaching_evals.text", header = TRUE)
data2 <- read.delim("teaching_evals.txt", header = TRUE)
library(readr)
teaching_evals <- read_csv("teaching_evals.txt")
View(teaching_evals)
View(teaching_evals)
library(readr)
teaching_evals_description <- read_delim("teaching_evals_description.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(teaching_evals_description)
#transform variables
teaching_evals_description <- read_delim("teaching_evals_description.txt","\t", escape_double = FALSE, trim_ws = TRUE)
View(teaching_evals_description)
View(teaching_evals)
View(teaching_evals)
View(teaching_evals)
View(teaching_evals)
teaching_evals <- read_csv("teaching_evals.txt")
View(teaching_evals)
summary(teaaching_evals_description)
#load data
data <- read.delim("teaching_evals_description.txt", header = TRUE)
data2 <- read.delim("teaching_evals.txt", header = TRUE)
summary(data)
summary(data2)
View(teaching_evals_description)
View(teaching_evals)
View(teaching_evals_description)
View(teaching_evals_description)
View(teaching_evals)
#load data
data <- read.delim("teaching_evals_description.txt", header = FALSE)
data2 <- read.delim("teaching_evals.txt", header = FALSE)
#library
library(tidyverse)
library(ggplot2)
library(readr)
#load data
data <- read.delim("teaching_evals_description.txt", header = FALSE)
data2 <- read.delim("teaching_evals.txt", header = FALSE)
#transform variables
teaching_evals_description <- read_delim("teaching_evals_description.txt","\t", escape_double = FALSE, trim_ws = TRUE)
teaching_evals <- read_csv("teaching_evals.txt")
View(teaching_evals)
View(teaching_evals_description)
teaching_evals <- read_csv("teaching_evals.txt", header = FALSE)
teaching_evals <- read_tsv("teaching_evals.txt")
View(teaching_evals)
teaching_evals <- read_tsv("teaching_evals.txt", header = FALSE)
teaching_evals <- readr::col_double("teaching_evals.txt")
view(data)
view(data2)
teaching_evals <- read_csv("teaching_evals.txt", col_names = FALSE)
View(teaching_evals)
#transform variables
teaching_evals_description <- read_csv("teaching_evals_description.txt", col_names = FALSE)
teaching_evals <- read_csv("teaching_evals.txt", col_names = FALSE)
View(teaching_evals)
View(teaching_evals)
View(teaching_evals_description)
quantile(data)
#quartile plots
ggplot(data)
ggplot(data2)
View(data2)
View(data2)
ggplot(data2, aes(x1))
ggplot(data2, aes(V1))
#
ggplot(data2, aes(V1))
ggplot(data2)
ggplot(data2) + geosmooth(data2)
#library
library(tidyverse)
ggplot(data2) + geom_smooth(data2)
ggplot(data2, aes(V1)) + geom_smooth(data2)
ggplot(data2, aes()) + geom_smooth(data2)
ggplot(data2)
#quartile plots
ggplot(data)
ggplot(data2)
View(data)
#quartile plots
ggplot(data, aes(V1))
ggplot(data2, aes(V1))
ggplot2(data2, aes(V1))
#quartile plots
ggplot(data, aes(V1)) + geom_boxplot(data)
#quartile plots
ggplot(data, aes(V1)) + geom_boxplot(aes(data))
#quartile plots
ggplot(data, aes(V1)) + geom_smooth(aes(data))
#quartile plots
ggplot(data, aes(V1)) + geom_smooth()
#quartile plots
ggplot(data)
ggplot(data2)
#quartile plots
gplot(data)
gplot(data2)
View(data)
#quartile plots
#ggplot(data)
ggplot(data2, aes(V1))
#quartile plots
#ggplot(data)
ggplot(data2, aes(V1)) + geom_smooth()
#quartile plots
#ggplot(data)
ggplot(data2, aes(V1)) + geom_smooth(V1)
#quartile plots
#ggplot(data)
ggplot(data2, aes(V1)) + geom_smooth(1)
#quartile plots
#ggplot(data)
ggplot(data2, aes(V1)) + geom_smooth(data)
#quartile plots
#ggplot(data)
ggplot(data2, aes(V1)) + geom_smooth(aes(V1))
#quartile plots
#ggplot(data)
ggplot(data2, aes(V1))
head(teaching_evals_description)
#quartile plots
#ggplot(data)
ggplot(data2, aes(V1))
head(data2)
head(data)
View(data2)
View(data2)
teaching_evals <- read_csv("teaching_evals.txt")
#quartile plots
ggplot(teaching_evals)
View(teaching_evals)
#quartile plots
#ggplot(data)
ggplot(teaching_evals, aes(V1))
#quartile plots
#ggplot(data)
ggplot(teaching_evals)
#quartile plots
ggplot(teaching_evals_description)
ggplot(teaching_evals)
data$cyl <- as.factor(data$cyl)
data$teaching_evals <- as.factor(data$teaching_evals)
data$data <- as.factor(data$data)
geom_point()
#quartile plots
#ggplot(data)
ggplot(data2, aes(V1))
geom_point()
geom_point(data)
geom_point(mapping = data)
geom_point(mapping = aes(V1))
ggplot(teaching_evals)
#scatter plot
ggplot(data, aes(V1)) + geom_point()
View(teaching_evals)
ggplot(teaching_evals, aes(1,22,3))
ggplot(teaching_evals, aes(1,22,3, 1_1, 19, 3_1))
ggplot(teaching_evals, aes(1,22,3,1_1,19,3_1))
ggplot(teaching_evals, aes(1,22,3,11,19,3_1))
ggplot(teaching_evals, aes(1,22,3,11,19,31))
ggplot(teaching_evals, aes(1,23))
ggplot(teaching_evals, aes(1,23,3,19))
#scatter plot
#ggplot(data, aes(V1)) + geom_point()
#ggplot(data2, aes(v1)) + geom_point()
ggplot(teaching_evals, aes())
#scatter plot
#ggplot(data, aes(V1)) + geom_point()
#ggplot(data2, aes(v1)) + geom_point()
ggplot(teaching_evals, aes(1,23,3,19)) + geom_point()
ggplot(teaching_evals, aes(1,23,3,19))
#quartile plots
#ggplot(data, aes(V1))
ggplot(data2, aes(V1))
#scatter plot
#ggplot(data, aes(V1)) + geom_point()
ggplot(data2, aes(v1)) + geom_point()+ geom_point()
View(data2)
#quartile plots
#ggplot(data, aes(V1))
ggplot(data2, aes(V1))
#scatter plot
#ggplot(data, aes(V1)) + geom_point()
ggplot(data2, aes(v1)) + geom_point()
#scatter plot
#ggplot(data, aes(V1)) + geom_point()
ggplot(data2, aes(124)) + geom_point()
#scatter plot
#ggplot(data, aes(V1)) + geom_point()
ggplot(data2, aes(1)) + geom_point()
#scatter plot
#ggplot(data, aes(V1)) + geom_point()
ggplot(data2, aes()) + geom_point()
#scatter plot
#ggplot(data, aes(V1)) + geom_point()
#ggplot(data2, aes(V1)) + geom_point()
ggplot(teaching_evals, aes(1,23,3,19)) + geom_point()
#setup our environment
mypath = "https://raw.githubusercontent.com/sivabalanb/Data-Analysis-with-Pandas-and-Python/master/nba.csv"
setwd(mypath)
#library
library(tidyverse)
library(ggplot2)
library(readr)
#load data
data <- read.csv(mypath)
summary(data)
head(data)
summary(data)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
View(data)
View(data)
#plot quartile
ggplot(data, aes(salary, age))
#plot quartile
ggplot(data, aes(weight, age))
#plot quartile
ggplot(data, aes(age))
#plot quartile
ggplot(data)
#plot quartile
ggplot(data, aes(x= age, y = salary))
#plot quartile
ggplot(data, aes(x=age, y=salary))
#load data
nba <- read.csv(mypath)
#load data
nba <- read.csv(mypath)
head(nba)
#statistical description
summary(nba)
#plot quartile
ggplot(nba, aes(x=age, y=salary))
#plot quartile
ggplot(nba, aes(x=age, y=salary, colors(team)))
View(data)
#plot quartile
ggplot(nba, aes(x=Age, y=Salary, colors(team)))
#plot quartile
ggplot(nba, aes(x=Age, y=Salary))
#plot quartile
ggplot(nba, aes(x=Salary, y=Age))
#plot quartile
ggplot(nba, aes(x=Salary, y=Age, color=Team))
#plot quartile
ggplot(nba, aes(x=Age, y=Age, color=Team))
print(nba)
source('C:/Users/Andre/Desktop/Itec 375/Final attached files Nov 8, 2020 215 PM/NBA2015-2016_stats.R', echo=TRUE)
source('C:/Users/Andre/Desktop/Itec 375/Final attached files Nov 8, 2020 215 PM/NBA2015-2016_stats.R', echo=TRUE)
print(ggplot)
#plot quartile
ggplot(nba, aes(x=Salary, y=Age, color=Team))
#plot quartile
ggplot(nba, aes(x=Age, y=Salary, color=Team))
print()
print(nba)
#plot quartile
ggplot(nba, aes(x=Age, y=Salary, color=Team)) + geom_point()
#scatterplot quartile
ggplot(nba, aes(y=Age, x=Salary, color=Team)) + geom_point()
#quartile plot
ggplot(diamonds) + geom_point(aes(x=Age, y=Salary, color=Team)) + geom_smooth(aes(x=Age, y=Salary, color=Team))
#scatterplot quartile
ggplot(nba, aes(x=Age, y=Salary, color=Team)) + geom_point()
#quartile plot
ggplot(nba) + geom_point(aes(x=Age, y=Salary, color=Team)) + geom_smooth(aes(x=Age, y=Salary, color=Team))
#Linear Model
Nbamodel <- lm(player ~ Team + Position + Number, data = nba)
#Linear Model
Nbamodel <- lm(Player ~ Team + Position + Number, data = nba)
#Linear Model
Nbamodel <- lm(Name ~ Team + Position + Number, data = nba)
#Linear Model
Nbamodel <- lm(Salary ~ Team + Position + Number, data = nba)
summary(Nbamodel)
#Confusioin Matrix
confusionMatrix(nba, ...)
library(heuristica)
install.packages("heuristica")
#Confusioin Matrix
confusionMatrix(nba, ...)
#Confusioin Matrix
confusionMatrix(data, ...)
install.packages("caret")
#Linear Model
Nbamodel <- lm(Salary ~ Team + Position + Number, data = nba)
summary(Nbamodel)
